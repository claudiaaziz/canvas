!function(){"use strict";var t,s,e,a,n,r;t=class{constructor(t){this.canvasHandler=t,this.setupBrushSize()}setupBrushSize(){this.brushSizeInput=document.getElementById("size-slider"),this.brushSizeInput.addEventListener("input",(()=>this.updateBrushSize())),this.currentBrushSize=5}setBrushStyling(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.canvasHandler.colorHandler.currentColor,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.currentBrushSize;this.canvasHandler.ctx.lineCap="round",this.canvasHandler.ctx.lineWidth=s,this.canvasHandler.ctx.strokeStyle=t}updateBrushSize(){this.currentBrushSize=parseInt(this.brushSizeInput.value),this.setBrushStyling()}},s=class{constructor(t){this.canvasHandler=t,this.setupColorHandling()}setupColorHandling(){this.currentColor="black",this.brushColorPicker=document.getElementById("color-picker"),this.brushColorPicker.addEventListener("input",(()=>{this.currentColor=this.brushColorPicker.value})),this.bgColorPicker=document.getElementById("background-color-picker"),this.bgColorPicker.addEventListener("input",(()=>{const t=this.canvasHandler.drawnPaths,s=this.canvasHandler.redoStack;this.canvasHandler.clear(),this.canvasHandler.drawnPaths=t,this.canvasHandler.redoStack=s,t.forEach((t=>this.canvasHandler.redrawPath(t))),this.canvasHandler.canvas.style.backgroundColor=this.bgColorPicker.value}))}},e=class{constructor(t){this.canvasHandler=t,this.setupDrawingEventListeners()}setupDrawingEventListeners(){this.canvasHandler.canvas.addEventListener("mousedown",(t=>this.startDrawing(t))),this.canvasHandler.canvas.addEventListener("mousemove",(t=>this.draw(t))),this.canvasHandler.canvas.addEventListener("mouseup",(()=>this.stopDrawing())),this.canvasHandler.canvas.addEventListener("mouseout",(()=>this.stopDrawing()))}startDrawing(t){this.isDrawing||(this.currentPath=[],this.redoStack=[],this.isDrawing=!0);const s=t.clientX-this.canvasHandler.canvas.offsetLeft,e=t.clientY-this.canvasHandler.canvas.offsetTop;this.canvasHandler.ctx.beginPath(),this.canvasHandler.ctx.moveTo(s,e),this.currentPath.push({x:s,y:e,color:this.canvasHandler.colorHandler.currentColor,brushSize:this.canvasHandler.brushHandler.currentBrushSize}),this.draw(t)}draw(t){if(!this.isDrawing)return;const s=t.clientX-this.canvasHandler.canvas.offsetLeft,e=t.clientY-this.canvasHandler.canvas.offsetTop;this.canvasHandler.ctx.lineTo(s,e);const a=this.canvasHandler.eraserCheckbox.checked?this.canvasHandler.colorHandler.bgColorPicker.value:this.canvasHandler.colorHandler.currentColor;this.canvasHandler.brushHandler.setBrushStyling(a,this.canvasHandler.brushHandler.currentBrushSize),this.canvasHandler.ctx.stroke(),this.currentPath.push({x:s,y:e,color:a,brushSize:this.canvasHandler.brushHandler.currentBrushSize})}stopDrawing(){this.canvasHandler.eraserCheckbox.checked&&(this.currentPath.isErase=!0),this.isDrawing&&(this.canvasHandler.drawnPaths.push(this.currentPath),this.isDrawing=!1)}},a=class{constructor(t){this.canvasHandler=t,this.setupDownloadBtn()}setupDownloadBtn(){this.downloadBtn=document.getElementById("download"),this.downloadBtn.addEventListener("click",(()=>this.download()))}download(){const t=document.createElement("canvas"),s=t.getContext("2d");t.width=this.canvasHandler.canvas.width,t.height=this.canvasHandler.canvas.height,s.fillStyle=this.canvasHandler.canvas.style.backgroundColor,s.fillRect(0,0,t.width,t.height),s.drawImage(this.canvasHandler.canvas,0,0);const e=t.toDataURL("image/png"),a=document.createElement("a");a.href=e,a.download="canvas.png",a.click()}},n=class{constructor(){this.setupCanvas(),this.setupCanvasProportions(),this.setupEraser(),this.setupUndoBtn(),this.setupRedoBtn(),this.setupClearBtn(),this.drawingHandler=new e(this),this.colorHandler=new s(this),this.brushHandler=new t(this),this.downloadHandler=new a(this)}setupCanvas(){this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.isDrawing=!1}setupCanvasProportions(){this.canvas.style.position="absolute",this.canvas.style.top="100px",this.canvas.height=window.innerHeight-100-100,this.canvas.width=window.innerWidth}setupClearBtn(){this.clearBtn=document.getElementById("clear"),this.clearBtn.addEventListener("click",(()=>this.clear()))}setupEraser(){this.eraserCheckbox=document.getElementById("eraser")}setupUndoBtn(){this.drawnPaths=[],this.undoBtn=document.getElementById("undo"),this.undoBtn.addEventListener("click",(()=>this.undo()))}setupRedoBtn(){this.redoStack=[],this.redoBtn=document.getElementById("redo"),this.redoBtn.addEventListener("click",(()=>this.redo()))}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.canvas.style.backgroundColor="white",this.redoStack=[],this.drawnPaths=[]}undo(){if(this.drawnPaths.length>0){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const t=this.drawnPaths.pop();this.drawingHandler.redoStack.push(t),this.drawnPaths.forEach((t=>this.redrawPath(t)))}}redrawPath(t){t.forEach(((s,e)=>{0===e?(this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y)):(this.ctx.lineTo(s.x,s.y),t.isErase&&(s.color=this.colorHandler.bgColorPicker.value),this.brushHandler.setBrushStyling(s.color,s.brushSize),this.ctx.stroke())}))}redo(){if(this.drawingHandler.redoStack.length>0){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const t=this.drawingHandler.redoStack.pop();this.drawnPaths.push(t),this.drawnPaths.forEach((t=>this.redrawPath(t)))}}},r=class{constructor(){this.brushRadio=document.getElementById("brush"),this.eraserRadio=document.getElementById("eraser"),this.brushLabel=document.querySelector('label[for="brush"]'),this.eraserLabel=document.querySelector('label[for="eraser"]'),this.detectChange(),this.updateIcon()}updateIcon(){this.brushLabel.querySelector("img").src=this.brushRadio.checked?"assets/tab-icon.png":"assets/menu icons/not-active-brush.png",this.eraserLabel.querySelector("img").src=this.eraserRadio.checked?"assets/menu icons/active-eraser.png":"assets/menu icons/not-active-eraser.png"}detectChange(){[this.brushRadio,this.eraserRadio].forEach((t=>{t.addEventListener("change",(()=>this.updateIcon()))}))}},document.addEventListener("DOMContentLoaded",(()=>{new n,new r}))}();
//# sourceMappingURL=main.js.map