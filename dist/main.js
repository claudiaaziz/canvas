!function(){"use strict";var e,a,t,s,n,r,i,d;e=class{constructor(e){this.canvasHandler=e,this.setupDrawingEventListeners()}setupDrawingEventListeners(){this.canvasHandler.canvas.addEventListener("mousedown",(e=>this.startDrawing(e))),this.canvasHandler.canvas.addEventListener("mousemove",(e=>this.draw(e))),this.canvasHandler.canvas.addEventListener("mouseup",(()=>this.stopDrawing())),this.canvasHandler.canvas.addEventListener("mouseout",(()=>this.stopDrawing()))}startDrawing(e){this.isDrawing||(this.currentPath=[],this.redoStack=[],this.isDrawing=!0);const a=e.clientX-this.canvasHandler.canvas.offsetLeft,t=e.clientY-this.canvasHandler.canvas.offsetTop;this.canvasHandler.ctx.beginPath(),this.canvasHandler.ctx.moveTo(a,t),this.currentPath.push({x:a,y:t,color:this.canvasHandler.colorHandler.currentColor,brushSize:this.canvasHandler.brushHandler.currentBrushSize}),this.draw(e)}draw(e){if(!this.isDrawing)return;const a=e.clientX-this.canvasHandler.canvas.offsetLeft,t=e.clientY-this.canvasHandler.canvas.offsetTop;this.canvasHandler.ctx.lineTo(a,t);const s=this.canvasHandler.eraseAndClearHandler.eraserCheckbox.checked?this.canvasHandler.colorHandler.bgColorPicker.value:this.canvasHandler.colorHandler.currentColor;this.canvasHandler.brushHandler.setBrushStyling(s,this.canvasHandler.brushHandler.currentBrushSize),this.canvasHandler.ctx.stroke(),this.currentPath.push({x:a,y:t,color:s,brushSize:this.canvasHandler.brushHandler.currentBrushSize})}stopDrawing(){this.canvasHandler.eraseAndClearHandler.eraserCheckbox.checked&&(this.currentPath.isErase=!0),this.isDrawing&&(this.canvasHandler.undoAndRedoHandler.drawnPaths.push(this.currentPath),this.isDrawing=!1)}},a=class{constructor(e){this.canvasHandler=e,this.setupColorHandling()}setupColorHandling(){this.currentColor="black",this.brushColorPicker=document.getElementById("color-picker"),this.brushColorPicker.addEventListener("input",(()=>{this.currentColor=this.brushColorPicker.value})),this.bgColorPicker=document.getElementById("background-color-picker"),this.bgColorPicker.addEventListener("input",(()=>{const e=this.canvasHandler.undoAndRedoHandler.drawnPaths,a=this.canvasHandler.undoAndRedoHandler.redoStack;this.canvasHandler.eraseAndClearHandler.clear(),this.canvasHandler.undoAndRedoHandler.drawnPaths=e,this.canvasHandler.undoAndRedoHandler.redoStack=a,this.canvasHandler.undoAndRedoHandler.drawnPaths.forEach((e=>this.canvasHandler.undoAndRedoHandler.redrawPath(e))),this.canvasHandler.canvas.style.backgroundColor=this.bgColorPicker.value}))}},t=class{constructor(e){this.canvasHandler=e,this.setupBrushSize()}setupBrushSize(){this.brushSizeInput=document.getElementById("size-slider"),this.brushSizeInput.addEventListener("input",(()=>this.updateBrushSize())),this.currentBrushSize=5}setBrushStyling(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.canvasHandler.colorHandler.currentColor,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.currentBrushSize;this.canvasHandler.ctx.lineCap="round",this.canvasHandler.ctx.lineWidth=a,this.canvasHandler.ctx.strokeStyle=e}updateBrushSize(){this.currentBrushSize=parseInt(this.brushSizeInput.value),this.setBrushStyling()}},s=class{constructor(e){this.canvasHandler=e,this.setupEraser(),this.setupClearBtn()}setupClearBtn(){this.clearBtn=document.getElementById("clear"),this.clearBtn.addEventListener("click",(()=>this.clear()))}setupEraser(){this.eraserCheckbox=document.getElementById("eraser")}clear(){this.canvasHandler.ctx.clearRect(0,0,this.canvasHandler.canvas.width,this.canvasHandler.canvas.height),this.canvasHandler.canvas.style.backgroundColor="white",this.canvasHandler.undoAndRedoHandler.redoStack=[],this.canvasHandler.undoAndRedoHandler.drawnPaths=[]}},n=class{constructor(e){this.canvasHandler=e,this.setupUndoBtn(),this.setupRedoBtn()}setupUndoBtn(){this.drawnPaths=[],this.undoBtn=document.getElementById("undo"),this.undoBtn.addEventListener("click",(()=>this.undo()))}setupRedoBtn(){this.redoStack=[],this.redoBtn=document.getElementById("redo"),this.redoBtn.addEventListener("click",(()=>this.redo()))}undo(){if(this.drawnPaths.length>0){this.canvasHandler.ctx.clearRect(0,0,this.canvasHandler.canvas.width,this.canvasHandler.canvas.height);const e=this.drawnPaths.pop();this.redoStack.push(e),this.drawnPaths.forEach((e=>this.redrawPath(e)))}}redrawPath(e){e.forEach(((a,t)=>{0===t?(this.canvasHandler.ctx.beginPath(),this.canvasHandler.ctx.moveTo(a.x,a.y)):(this.canvasHandler.ctx.lineTo(a.x,a.y),e.isErase&&(a.color=this.canvasHandler.colorHandler.bgColorPicker.value),this.canvasHandler.brushHandler.setBrushStyling(a.color,a.brushSize),this.canvasHandler.ctx.stroke())}))}redo(){if(this.redoStack.length>0){this.canvasHandler.ctx.clearRect(0,0,this.canvasHandler.canvas.width,this.canvasHandler.canvas.height);const e=this.redoStack.pop();this.drawnPaths.push(e),this.drawnPaths.forEach((e=>this.redrawPath(e)))}}},r=class{constructor(e){this.canvasHandler=e,this.setupDownloadBtn()}setupDownloadBtn(){this.downloadBtn=document.getElementById("download"),this.downloadBtn.addEventListener("click",(()=>this.download()))}download(){const e=document.createElement("canvas"),a=e.getContext("2d");e.width=this.canvasHandler.canvas.width,e.height=this.canvasHandler.canvas.height,a.fillStyle=this.canvasHandler.canvas.style.backgroundColor,a.fillRect(0,0,e.width,e.height),a.drawImage(this.canvasHandler.canvas,0,0);const t=e.toDataURL("image/png"),s=document.createElement("a");s.href=t,s.download="canvas.png",s.click()}},i=class{constructor(){this.setupCanvas(),this.setupCanvasProportions(),this.drawingHandler=new e(this),this.colorHandler=new a(this),this.brushHandler=new t(this),this.eraseAndClearHandler=new s(this),this.undoAndRedoHandler=new n(this),this.downloadHandler=new r(this)}setupCanvas(){this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.isDrawing=!1}setupCanvasProportions(){this.canvas.style.position="absolute",this.canvas.style.top="100px",this.canvas.height=window.innerHeight-100-100,this.canvas.width=window.innerWidth}},d=class{constructor(){this.brushRadio=document.getElementById("brush"),this.eraserRadio=document.getElementById("eraser"),this.brushLabel=document.querySelector('label[for="brush"]'),this.eraserLabel=document.querySelector('label[for="eraser"]'),this.detectChange(),this.updateIcon()}updateIcon(){this.brushLabel.querySelector("img").src=this.brushRadio.checked?"assets/tab-icon.png":"assets/menu icons/not-active-brush.png",this.eraserLabel.querySelector("img").src=this.eraserRadio.checked?"assets/menu icons/active-eraser.png":"assets/menu icons/not-active-eraser.png"}detectChange(){[this.brushRadio,this.eraserRadio].forEach((e=>{e.addEventListener("change",(()=>this.updateIcon()))}))}},document.addEventListener("DOMContentLoaded",(()=>{new i,new d}))}();
//# sourceMappingURL=main.js.map