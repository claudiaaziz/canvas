{"version":3,"file":"main.js","mappings":"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","sources":["webpack://canvas-project/./src/scripts/canvas.js","webpack://canvas-project/./src/index.js"],"sourcesContent":["class Canvas {\n  constructor() {\n    this.canvas = document.getElementById(\"canvas\");\n    this.setupCanvas();\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.isDrawing = false;\n\n    this.setupDrawingEventListeners();\n    this.setupColorHandeling();\n\n    this.backgroundInput = document.getElementById(\"background-color-picker\");\n    this.backgroundInput.addEventListener(\"input\", () =>\n      this.changeBackgroundColor()\n    );\n\n    this.clearBtn = document.getElementById(\"clear\");\n    this.clearBtn.addEventListener(\"click\", () => this.clear());\n\n    this.setupUndoBtn();\n  }\n\n  setupCanvas() {\n    const topMargin = 100;\n    const bottomMargin = 100;\n\n    this.canvas.style.position = \"absolute\";\n    this.canvas.style.top = topMargin + \"px\";\n\n    this.canvas.height = window.innerHeight - topMargin - bottomMargin;\n    this.canvas.width = window.innerWidth;\n  }\n\n  setupDrawingEventListeners() {\n    this.canvas.addEventListener(\"mousedown\", this.startDrawing.bind(this));\n    this.canvas.addEventListener(\"mousemove\", this.draw.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.stopDrawing.bind(this));\n    this.canvas.addEventListener(\"mouseout\", this.stopDrawing.bind(this));\n  }\n\n  setupColorHandeling() {\n    // if a color has been selected..\n    this.colorButtons = document.querySelectorAll(\".colorButton\");\n    this.colorInput = document.getElementById(\"color-picker\");\n\n    this.colorButtons.forEach((button) => {\n      button.addEventListener(\"click\", () => {\n        this.currentColor = button.style.backgroundColor;\n      });\n    });\n\n    this.colorInput.addEventListener(\"input\", (e) => {\n      this.currentColor = e.target.value;\n    });\n  }\n\n  setupUndoBtn() {\n    this.drawnPaths = [];\n    this.undoBtn = document.getElementById(\"undo\");\n    this.undoBtn.addEventListener(\"click\", () => this.undo());\n  }\n\n  startDrawing(e) {\n    // clear the stack when a new drawing begins\n    if (!this.isDrawing) {\n      this.currentPath = [];\n    }\n\n    this.isDrawing = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(\n      e.clientX - this.canvas.offsetLeft,\n      e.clientY - this.canvas.offsetTop\n    );\n  }\n\n  draw(e) {\n    if (!this.isDrawing) return;\n\n    const x = e.clientX - this.canvas.offsetLeft;\n    const y = e.clientY - this.canvas.offsetTop;\n\n    this.ctx.lineTo(x, y);\n\n    // styling\n    this.ctx.lineCap = \"round\";\n    this.ctx.lineWidth = 5;\n    this.ctx.strokeStyle = this.currentColor;\n\n    this.ctx.stroke();\n\n    // store the current point in the drawing path\n    this.currentPath.push({ x, y, color: this.currentColor });\n  }\n\n  stopDrawing() {\n    // save the current path to the stack\n    if (this.isDrawing) this.drawnPaths.push(this.currentPath);\n    this.isDrawing = false;\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.canvas.style.backgroundColor = \"white\";\n  }\n\n  undo() {\n    if (this.drawnPaths.length > 0) {\n      // remove the last drawn path from the stack\n      this.drawnPaths.pop();\n\n      // // clear the canvas first\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n      // then redraw the remaining paths\n      this.drawnPaths.forEach((path) => this.redrawPath(path));\n    }\n  }\n\n  redrawPath(path) {\n    path.forEach((point, index) => {\n      if (index === 0) {\n        // Move to the starting point of the path\n        this.ctx.beginPath();\n        this.ctx.moveTo(point.x, point.y);\n      } else {\n        // Draw a line to the next point\n        this.ctx.lineTo(point.x, point.y);\n        this.ctx.lineCap = \"round\";\n        this.ctx.lineWidth = 5;\n        this.ctx.strokeStyle = point.color;\n        this.ctx.stroke();\n      }\n    });\n  }\n\n  changeBackgroundColor() {\n    this.canvas.style.backgroundColor = this.backgroundInput.value;\n  }\n}\n\nexport default Canvas;\n","import Canvas from \"./scripts/canvas\";\nimport Brush from \"./scripts/brush\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  new Canvas();\n});\n\n\n"],"names":["constructor","this","canvas","document","getElementById","setupCanvas","ctx","getContext","isDrawing","setupDrawingEventListeners","setupColorHandeling","backgroundInput","addEventListener","changeBackgroundColor","clearBtn","clear","setupUndoBtn","style","position","top","topMargin","height","window","innerHeight","width","innerWidth","startDrawing","bind","draw","stopDrawing","colorButtons","querySelectorAll","colorInput","forEach","button","currentColor","backgroundColor","e","target","value","drawnPaths","undoBtn","undo","currentPath","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","x","y","lineTo","lineCap","lineWidth","strokeStyle","stroke","push","color","clearRect","length","pop","path","redrawPath","point","index","Canvas"],"sourceRoot":""}