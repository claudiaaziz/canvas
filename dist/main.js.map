{"version":3,"file":"main.js","mappings":"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","sources":["webpack://canvas-project/./src/scripts/canvas.js","webpack://canvas-project/./src/index.js"],"sourcesContent":["class Canvas {\n  constructor() {\n    this.setupCanvas();\n    this.setupCanvasProportions();\n    this.setupDrawingEventListeners();\n    this.setupColorHandeling();\n    this.setupUndoBtn();\n    this.setupClearBtn();\n  }\n\n  setupCanvas() {\n    this.canvas = document.getElementById(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.isDrawing = false;\n  }\n\n  setupCanvasProportions() {\n    const topMargin = 100;\n    const bottomMargin = 100;\n\n    this.canvas.style.position = \"absolute\";\n    this.canvas.style.top = topMargin + \"px\";\n\n    this.canvas.height = window.innerHeight - topMargin - bottomMargin;\n    this.canvas.width = window.innerWidth;\n  }\n\n  setupDrawingEventListeners() {\n    this.canvas.addEventListener(\"mousedown\", this.startDrawing.bind(this));\n    this.canvas.addEventListener(\"mousemove\", this.draw.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.stopDrawing.bind(this));\n    this.canvas.addEventListener(\"mouseout\", this.stopDrawing.bind(this));\n  }\n\n  setupColorHandeling() {\n    // if a brush color has been selected..\n    this.colorBtns = document.querySelectorAll(\".color-btn\");\n    this.brushColorPicker = document.getElementById(\"color-picker\");\n\n    this.colorBtns.forEach((colorbtn) => {\n      colorbtn.addEventListener(\"click\", () => {\n        this.currentColor = colorbtn.style.backgroundColor;\n      });\n    });\n\n    this.brushColorPicker.addEventListener(\"input\", () => {\n      this.currentColor = this.brushColorPicker.value;\n    });\n\n    // if a bg color has been selected..\n    this.bgColorPicker = document.getElementById(\"background-color-picker\");\n    this.bgColorPicker.addEventListener(\n      \"input\",\n      () => (this.canvas.style.backgroundColor = this.bgColorPicker.value)\n    );\n  }\n\n  setupUndoBtn() {\n    this.drawnPaths = [];\n    this.undoBtn = document.getElementById(\"undo\");\n    this.undoBtn.addEventListener(\"click\", () => this.undo());\n  }\n\n  setupClearBtn() {\n    this.clearBtn = document.getElementById(\"clear\");\n    this.clearBtn.addEventListener(\"click\", () => this.clear());\n  }\n\n  startDrawing(e) {\n    // clear the stack when a new drawing begins\n    if (!this.isDrawing) {\n      this.currentPath = [];\n    }\n\n    this.isDrawing = true;\n\n    // Begin a new path in the canvas ctx & move to the initial drawing position\n    this.ctx.beginPath();\n\n    // Calculate the adjusted mouse coordinates relative to the canvas\n    const canvasMouseX = e.clientX - this.canvas.offsetLeft;\n    const canvasMouseY = e.clientY - this.canvas.offsetTop;\n\n    // Move the brush to the adjusted mouse coordinates\n    this.ctx.moveTo(canvasMouseX, canvasMouseY);\n  }\n\n  draw(e) {\n    if (!this.isDrawing) return;\n\n    const x = e.clientX - this.canvas.offsetLeft;\n    const y = e.clientY - this.canvas.offsetTop;\n\n    this.ctx.lineTo(x, y);\n\n    // styling\n    this.ctx.lineCap = \"round\";\n    this.ctx.lineWidth = 5;\n    this.ctx.strokeStyle = this.currentColor;\n\n    this.ctx.stroke();\n\n    // store the current point in the drawing path\n    this.currentPath.push({ x, y, color: this.currentColor });\n  }\n\n  stopDrawing() {\n    // save the current path to the stack\n    if (this.isDrawing) this.drawnPaths.push(this.currentPath);\n    this.isDrawing = false;\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.canvas.style.backgroundColor = \"white\";\n  }\n\n  undo() {\n    // Clear the entire canvas\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Pop the last drawn path from the stack\n    if (this.drawnPaths.length > 0) {\n      this.drawnPaths.pop();\n\n      // Redraw all paths with the correct colors\n      this.drawnPaths.forEach((path) => this.redrawPath(path));\n    }\n  }\n\n  redrawPath(path) {\n    path.forEach((point, index) => {\n      if (index === 0) {\n        // Move to the starting point of the path\n        this.ctx.beginPath();\n        this.ctx.moveTo(point.x, point.y);\n      } else {\n        // Draw a line to the next point\n        this.ctx.lineTo(point.x, point.y);\n        this.ctx.lineCap = \"round\";\n        this.ctx.lineWidth = 5;\n        this.ctx.strokeStyle = point.color;\n        this.ctx.stroke();\n      }\n    });\n  }\n}\n\nexport default Canvas;\n","import Canvas from \"./scripts/canvas\";\nimport Brush from \"./scripts/brush\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  new Canvas();\n});\n\n\n"],"names":["constructor","this","setupCanvas","setupCanvasProportions","setupDrawingEventListeners","setupColorHandeling","setupUndoBtn","setupClearBtn","canvas","document","getElementById","ctx","getContext","isDrawing","style","position","top","topMargin","height","window","innerHeight","width","innerWidth","addEventListener","startDrawing","bind","draw","stopDrawing","colorBtns","querySelectorAll","brushColorPicker","forEach","colorbtn","currentColor","backgroundColor","value","bgColorPicker","drawnPaths","undoBtn","undo","clearBtn","clear","e","currentPath","beginPath","canvasMouseX","clientX","offsetLeft","canvasMouseY","clientY","offsetTop","moveTo","x","y","lineTo","lineCap","lineWidth","strokeStyle","stroke","push","color","clearRect","length","pop","path","redrawPath","point","index","Canvas"],"sourceRoot":""}