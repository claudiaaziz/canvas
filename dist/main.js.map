{"version":3,"file":"main.js","mappings":"6BAiGA,IAjGA,MACEA,WAAAA,GACEC,KAAKC,OAASC,SAASC,eAAe,UACtCH,KAAKI,cACLJ,KAAKK,IAAML,KAAKC,OAAOK,WAAW,MAClCN,KAAKO,WAAY,EAEjBP,KAAKQ,6BACLR,KAAKS,sBAELT,KAAKU,gBAAkBR,SAASC,eAAe,2BAC/CH,KAAKU,gBAAgBC,iBAAiB,SAAS,IAC7CX,KAAKY,0BAGPZ,KAAKa,SAAWX,SAASC,eAAe,SACxCH,KAAKa,SAASF,iBAAiB,SAAS,IAAMX,KAAKc,SACrD,CAEAV,WAAAA,GAIEJ,KAAKC,OAAOc,MAAMC,SAAW,WAC7BhB,KAAKC,OAAOc,MAAME,IAAMC,QAExBlB,KAAKC,OAAOkB,OAASC,OAAOC,YANV,IACG,IAMrBrB,KAAKC,OAAOqB,MAAQF,OAAOG,UAC7B,CAEAf,0BAAAA,GACER,KAAKC,OAAOU,iBAAiB,YAAaX,KAAKwB,aAAaC,KAAKzB,OACjEA,KAAKC,OAAOU,iBAAiB,YAAaX,KAAK0B,KAAKD,KAAKzB,OACzDA,KAAKC,OAAOU,iBAAiB,UAAWX,KAAK2B,YAAYF,KAAKzB,OAC9DA,KAAKC,OAAOU,iBAAiB,WAAYX,KAAK2B,YAAYF,KAAKzB,MACjE,CAEAS,mBAAAA,GAEET,KAAK4B,aAAe1B,SAAS2B,iBAAiB,gBAC9C7B,KAAK8B,WAAa5B,SAASC,eAAe,gBAE1CH,KAAK4B,aAAaG,SAASC,IACzBA,EAAOrB,iBAAiB,SAAS,KAC/BX,KAAKiC,aAAeD,EAAOjB,MAAMmB,eAAe,GAChD,IAGJlC,KAAK8B,WAAWnB,iBAAiB,SAAUwB,IACzCnC,KAAKiC,aAAeE,EAAEC,OAAOC,KAAK,GAEtC,CAEAb,YAAAA,CAAaW,GACXnC,KAAKO,WAAY,EACjBP,KAAKK,IAAIiC,YACTtC,KAAKK,IAAIkC,OACPJ,EAAEK,QAAUxC,KAAKC,OAAOwC,WACxBN,EAAEO,QAAU1C,KAAKC,OAAO0C,UAW5B,CAEAjB,IAAAA,CAAKS,GACEnC,KAAKO,YACVP,KAAKK,IAAIuC,OACPT,EAAEK,QAAUxC,KAAKC,OAAOwC,WACxBN,EAAEO,QAAU1C,KAAKC,OAAO0C,WAE1B3C,KAAKK,IAAIwC,QAAU,QACnB7C,KAAKK,IAAIyC,UAAY,EACrB9C,KAAKK,IAAI0C,YAAc/C,KAAKiC,aAC5BjC,KAAKK,IAAI2C,SACX,CAEArB,WAAAA,GACE3B,KAAKO,WAAY,CACnB,CAEAO,KAAAA,GACEd,KAAKK,IAAI4C,UAAU,EAAG,EAAGjD,KAAKC,OAAOqB,MAAOtB,KAAKC,OAAOkB,QACxDnB,KAAKC,OAAOc,MAAMmB,gBAAkB,OACtC,CAEAtB,qBAAAA,GACEZ,KAAKC,OAAOc,MAAMmB,gBAAkBlC,KAAKU,gBAAgB2B,KAC3D,GC5FFnC,SAASS,iBAAiB,oBAAoB,KAC5C,IAAIuC,CAAQ,G","sources":["webpack://canvas-project/./src/scripts/canvas.js","webpack://canvas-project/./src/index.js"],"sourcesContent":["class Canvas {\n  constructor() {\n    this.canvas = document.getElementById(\"canvas\");\n    this.setupCanvas();\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.isDrawing = false;\n\n    this.setupDrawingEventListeners();\n    this.setupColorHandeling();\n\n    this.backgroundInput = document.getElementById(\"background-color-picker\");\n    this.backgroundInput.addEventListener(\"input\", () =>\n      this.changeBackgroundColor()\n    );\n\n    this.clearBtn = document.getElementById(\"clear\");\n    this.clearBtn.addEventListener(\"click\", () => this.clear());\n  }\n\n  setupCanvas() {\n    const topMargin = 100;\n    const bottomMargin = 100;\n\n    this.canvas.style.position = \"absolute\";\n    this.canvas.style.top = topMargin + \"px\";\n\n    this.canvas.height = window.innerHeight - topMargin - bottomMargin;\n    this.canvas.width = window.innerWidth;\n  }\n\n  setupDrawingEventListeners() {\n    this.canvas.addEventListener(\"mousedown\", this.startDrawing.bind(this));\n    this.canvas.addEventListener(\"mousemove\", this.draw.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.stopDrawing.bind(this));\n    this.canvas.addEventListener(\"mouseout\", this.stopDrawing.bind(this));\n  }\n\n  setupColorHandeling() {\n    // if a color has been selected..\n    this.colorButtons = document.querySelectorAll(\".colorButton\");\n    this.colorInput = document.getElementById(\"color-picker\");\n\n    this.colorButtons.forEach((button) => {\n      button.addEventListener(\"click\", () => {\n        this.currentColor = button.style.backgroundColor;\n      });\n    });\n\n    this.colorInput.addEventListener(\"input\", (e) => {\n      this.currentColor = e.target.value;\n    });\n  }\n\n  startDrawing(e) {\n    this.isDrawing = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(\n      e.clientX - this.canvas.offsetLeft,\n      e.clientY - this.canvas.offsetTop\n      );\n    // this.ctx.arc(\n    //   e.clientX - this.canvas.offsetLeft,\n    //   e.clientY - this.canvas.offsetTop,\n    //   3,\n    //   0,\n    //   Math.PI * 2\n    // );\n    // this.ctx.fill()\n    // this.ctx.closePath()\n  }\n\n  draw(e) {\n    if (!this.isDrawing) return;\n    this.ctx.lineTo(\n      e.clientX - this.canvas.offsetLeft,\n      e.clientY - this.canvas.offsetTop\n    );\n    this.ctx.lineCap = \"round\";\n    this.ctx.lineWidth = 5;\n    this.ctx.strokeStyle = this.currentColor;\n    this.ctx.stroke();\n  }\n\n  stopDrawing() {\n    this.isDrawing = false;\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.canvas.style.backgroundColor = \"white\";\n  }\n\n  changeBackgroundColor() {\n    this.canvas.style.backgroundColor = this.backgroundInput.value;\n  }\n}\n\nexport default Canvas;\n","import Canvas from \"./scripts/canvas\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  new Canvas();\n});\n\n\n"],"names":["constructor","this","canvas","document","getElementById","setupCanvas","ctx","getContext","isDrawing","setupDrawingEventListeners","setupColorHandeling","backgroundInput","addEventListener","changeBackgroundColor","clearBtn","clear","style","position","top","topMargin","height","window","innerHeight","width","innerWidth","startDrawing","bind","draw","stopDrawing","colorButtons","querySelectorAll","colorInput","forEach","button","currentColor","backgroundColor","e","target","value","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","lineTo","lineCap","lineWidth","strokeStyle","stroke","clearRect","Canvas"],"sourceRoot":""}