{"version":3,"file":"main.js","mappings":"6BA+CA,IA/CA,MACEA,WAAAA,GACEC,KAAKC,OAASC,SAASC,eAAe,UAEtCH,KAAKI,cACLJ,KAAKK,IAAML,KAAKC,OAAOK,WAAW,MAClCN,KAAKO,WAAY,EAEjBP,KAAKC,OAAOO,iBAAiB,YAAaR,KAAKS,aAAaC,KAAKV,OACjEA,KAAKC,OAAOO,iBAAiB,YAAaR,KAAKW,KAAKD,KAAKV,OACzDA,KAAKC,OAAOO,iBAAiB,UAAWR,KAAKY,YAAYF,KAAKV,OAC9DA,KAAKC,OAAOO,iBAAiB,WAAYR,KAAKY,YAAYF,KAAKV,MACjE,CAEAI,WAAAA,GAIEJ,KAAKC,OAAOY,MAAMC,SAAW,WAC7Bd,KAAKC,OAAOY,MAAME,IAAMC,QAExBhB,KAAKC,OAAOgB,OAASC,OAAOC,YANV,IACG,IAMrBnB,KAAKC,OAAOmB,MAAQF,OAAOG,UAC7B,CAEAZ,YAAAA,CAAaa,GACXtB,KAAKO,WAAY,EACjBP,KAAKK,IAAIkB,YACTvB,KAAKK,IAAImB,OAAOF,EAAEG,QAAUzB,KAAKC,OAAOyB,WAAYJ,EAAEK,QAAU3B,KAAKC,OAAO2B,WAC5E5B,KAAKW,KAAKW,EACZ,CAEAX,IAAAA,CAAKW,GACEtB,KAAKO,YACVP,KAAKK,IAAIwB,OAAOP,EAAEG,QAAUzB,KAAKC,OAAOyB,WAAYJ,EAAEK,QAAU3B,KAAKC,OAAO2B,WAC5E5B,KAAKK,IAAIyB,SACX,CAEAlB,WAAAA,GACEZ,KAAKO,WAAY,CACnB,GCtCFL,SAASM,iBAAiB,oBAAoB,KAC5C,IAAIuB,CAAQ,G","sources":["webpack://canvas-project/./src/scripts/canvas.js","webpack://canvas-project/./src/index.js"],"sourcesContent":["class Canvas {\n  constructor() {\n    this.canvas = document.getElementById(\"canvas\");\n\n    this.setupCanvas();\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.isDrawing = false;\n\n    this.canvas.addEventListener(\"mousedown\", this.startDrawing.bind(this));\n    this.canvas.addEventListener(\"mousemove\", this.draw.bind(this));\n    this.canvas.addEventListener(\"mouseup\", this.stopDrawing.bind(this));\n    this.canvas.addEventListener(\"mouseout\", this.stopDrawing.bind(this));\n  }\n\n  setupCanvas() {\n    const topMargin = 100;\n    const bottomMargin = 100;\n\n    this.canvas.style.position = \"absolute\";\n    this.canvas.style.top = topMargin + \"px\";\n\n    this.canvas.height = window.innerHeight - topMargin - bottomMargin;\n    this.canvas.width = window.innerWidth;\n  }\n\n  startDrawing(e) {\n    this.isDrawing = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    this.draw(e)\n  }\n\n  draw(e) {\n    if (!this.isDrawing) return;\n    this.ctx.lineTo(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    this.ctx.stroke()\n  }\n\n  stopDrawing() {\n    this.isDrawing = false;\n  }\n\n  // clear() {\n\n  // }\n}\n\nexport default Canvas;\n","import Canvas from \"./scripts/canvas\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  new Canvas();\n});\n\n\n"],"names":["constructor","this","canvas","document","getElementById","setupCanvas","ctx","getContext","isDrawing","addEventListener","startDrawing","bind","draw","stopDrawing","style","position","top","topMargin","height","window","innerHeight","width","innerWidth","e","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","lineTo","stroke","Canvas"],"sourceRoot":""}